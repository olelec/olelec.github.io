name: Release Version

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14.0"

      - name: Install dependencies
        run: npm install

      - name: Determine next version
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          NEW_VERSION=$(npm version patch --no-git-tag-version)
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV

      - name: Update Changelog
        id: changelog
        run: |
          NEW_CHANGELOG="## [${{ env.NEW_VERSION }}] - $(date +'%Y-%m-%d')\n\n"
          LAST_TAG=$(git describe --tags --abbrev=0 || echo "first-commit")
          if [ "$LAST_TAG" != "first-commit" ]; then
              NEW_CHANGELOG+=$(git log --pretty=format:"- %s" $LAST_TAG..HEAD)
          else
              NEW_CHANGELOG+=$(git log --pretty=format:"- %s" --reverse)
          fi
          echo -e "$NEW_CHANGELOG\n\n$(cat CHANGELOG.md)" > CHANGELOG.md

          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          echo -e "$NEW_CHANGELOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Commit & Push Version Bump
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"
          git add package.json CHANGELOG.md
          git commit -m "chore(release): bump version to ${{ env.NEW_VERSION }}"
          git tag ${{ env.NEW_VERSION }}
          git push origin main --tags

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_VERSION }}
          name: Release ${{ env.NEW_VERSION }}
          body: ${{ env.CHANGELOG }}
          draft: false
          prerelease: false
